# rule

# 在 .gitignore 文件中，每一行的忽略规则的语法如下：
# 1）空格不匹配任意文件，可作为分隔符，可用反斜杠转义
# 2）以“＃”开头的行都会被 Git 忽略。即#开头的文件标识注释，可以使用反斜杠进行转义。
# 3）可以使用标准的glob模式匹配。所谓的glob模式是指shell所使用的简化了的正则表达式。
# 4）以斜杠"/"开头表示目录；"/"结束的模式只匹配文件夹以及在该文件夹路径下的内容，但是不匹配该文件；"/"开始的模式匹配项目跟目录；如果一个模式不包含斜杠，则它匹配相对于当前 .gitignore 文件路径的内容，如果该模式不在 .gitignore 文件中，则相对于项目根目录。
# 5）以星号"*"通配多个字符，即匹配多个任意字符；使用两个星号"**" 表示匹配任意中间目录，比如`a/**/z`可以匹配 a/z, a/b/z 或 a/b/c/z等。
# 6）以问号"?"通配单个字符，即匹配一个任意字符；
# 7）以方括号"[]"包含单个字符的匹配列表，即匹配任何一个列在方括号中的字符。比如[abc]表示要么匹配一个a，要么匹配一个b，要么匹配一个c；如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配。比如[0-9]表示匹配所有0到9的数字，[a-z]表示匹配任意的小写字母）。
# 8）以叹号"!"表示不忽略(跟踪)匹配到的文件或目录，即要忽略指定模式以外的文件或目录，可以在模式前加上惊叹号（!）取反。需要特别注意的是：如果文件的父目录已经被前面的规则排除掉了，那么对这个文件用"!"规则是不起作用的。也就是说"!"开头的模式表示否定，该文件将会再次被包含，如果排除了该文件的父级目录，则使用"!"也不会再次被包含。可以使用反斜杠进行转义。


# example


#               表示此为注释,将被Git忽略
# *.a             表示忽略所有 .a 结尾的文件
# !lib.a          表示但lib.a除外
# /TODO           表示仅仅忽略项目根目录下的 TODO 文件，不包括 subdir/TODO
# build/          表示忽略 build/目录下的所有文件，过滤整个build文件夹；
# doc/*.txt       表示会忽略doc/notes.txt但不包括 doc/server/arch.txt
 
# bin/:           表示忽略当前路径下的bin文件夹，该文件夹下的所有内容都会被忽略，不忽略 bin 文件
# /bin:           表示忽略根目录下的bin文件
# /*.c:           表示忽略cat.c，不忽略 build/cat.c
# debug/*.obj:    表示忽略debug/io.obj，不忽略 debug/common/io.obj和tools/debug/io.obj
# **/foo:         表示忽略/foo,a/foo,a/b/foo等
# a/**/b:         表示忽略a/b, a/x/b,a/x/y/b等
# !/bin/run.sh    表示不忽略bin目录下的run.sh文件
# *.log:          表示忽略所有 .log 文件
# config.php:     表示忽略当前路径的 config.php 文件
 
# /mtk/           表示过滤整个文件夹
# *.zip           表示过滤所有.zip文件
# /mtk/do.c       表示过滤某个具体文件


node_modules

*.log

dist

.DS_Store
